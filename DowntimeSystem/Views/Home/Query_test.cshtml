@{
    ViewData["Title"] = "Downtime List";
}
<div class="container-fluid">
    <div class="panel-default">
        <div class="panel-heading"><i class="fa fa-cogs "></i> @ViewData["Title"]</div>
        <div class="panel-body">
            <div class="row">
                <div class="col-lg-2 col-xs-3 col-sm-3 col-md-2" style="display:none">
                    <label class="form-label"> System:</label>
                    <select id="system-select" class="form-control selectpicker" title="Select System" data-size="6" multiple data-none-selected-text="All" data-actions-box="true">
                    </select>
                </div>
                <div class="col-lg-2 col-xs-3 col-sm-3 col-md-2">
                    <label class="form-label"> Department:</label>
                    <select id="department-select" class="form-control selectpicker" title="Select Department" data-size="6" multiple data-live-search="true" data-none-selected-text="All" data-actions-box="true"></select>
                </div>
                <div class="col-lg-2 col-xs-3 col-sm-3 col-md-2">
                    <label class="form-label"> Project:</label>
                    <select id="project-select" class="form-control selectpicker" title="Select Project" data-size="6" data-max-options="1" data-live-search="true" onchange="getLine($('#line-select'),$('#project-select').val()); getStation($('#station-select'), $('#department-select').val(), $('#project-select').val(),$('#line-select').val())"> </select>
                </div>
                <div class="col-lg-2 col-xs-3 col-sm-3 col-md-2">
                    <label class="form-label"> Line:</label>
                    <select id="line-select" class="form-control selectpicker" title="Select Line" data-size="6" multiple data-none-selected-text="All" data-actions-box="true" data-live-search="true" onchange=" getStation($('#station-select'), $('#department-select').val(), $('#project-select').val(),$('#line-select').val());"></select>
                </div>
                <div class="col-lg-2 col-xs-3 col-sm-3 col-md-2">
                    <label class="form-label"> Station:</label>
                    <select id="station-select" class="form-control selectpicker" title="Select Station" data-size="6" multiple data-none-selected-text="All" data-actions-box="true" data-live-search="true"></select>
                </div>
                @await Component.InvokeAsync("DateTimeSelectComponent")
                <div class="col-lg-2 col-md-2 col-xs-3 col-sm-3 ">
                    <label class="form-label" for="id"> Ticket No: </label>
                    <input type='text' class="form-control" id='id' />
                </div>
                <div class="col-lg-2 col-md-2 col-xs-3 col-sm-3 ">
                    <label class="form-label" for="responser"> Employee ID: </label>
                    <input type='text' class="form-control" id='responser' placeholder="--请输入工号 (WY0000) --" />
                </div>

                <div class="col-lg-1  col-xs-1 col-sm-1 col-md-1" style="padding-top:27px"><button type="button" class="btn btn-primary" id="search" onclick="GetDowntimeList()">Search</button></div>
            </div>
        </div>
    </div>
</div>

<ul id="myTab" class="nav nav-tabs" role="tablist">
    <li class="nav-item"><a class="nav-link " id="analysis-tab" href="#analysisTab" data-toggle="tab" role="tab" aria-selected="false">Cookbook</a></li>
    <li class="nav-item"><a class="nav-link active" id="downtimet-tab" href="#downtimeTab" data-toggle="tab" role="tab" aria-selected="true">Downtime</a></li>
</ul>
<div id="myTabContent" class="tab-content border border-top-0">
    <div class="tab-pane fade" id="analysisTab" role="tabpanel" aria-labelledby="analysis-tab">
        <div class="row" style="margin-bottom:10px;margin-top:10px;display:none">
            <div class="col-xl-6 col-lg-6 col-md-12 col-sm-12 col-xs-12">
                <div id="frequencychart" class="mychart" style="width:100%;height:300px"> frequency</div>
            </div>
            <div class="col-xl-6 col-lg-6 col-md-12 col-sm-12 col-xs-12 ">
                <div id="percentchart" class="mychart" style="width:100%;height:300px"> percent </div>
            </div>
        </div>
        <table id="asList" class="tablegreen"></table>
    </div>
    <div class="tab-pane fade  show active" id="downtimeTab" role="tabpanel" aria-labelledby="downtimet-tab">
        <table id="dtList"></table>
    </div>
</div>

@await Component.InvokeAsync("RCCAEditComponent")
@await Component.InvokeAsync("RCCAConfirmComponent")


<script src="~/lib/bootstrap/dist/js/select2.full.min.js" type="text/javascript"></script>
<script src="~/js/customer.js"></script>
<script src="~/js/cookie.js"></script>
<script src="~/lib/echarts/dist/js/echarts.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap-table.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap-table-export.js"></script>
<script src="~/lib/bootstrap/dist/js/tableExport.js"></script>
<script src="~/lib/bootstrap/dist/js/FileSaver.min.js"></script>
<script src="~/lib/bootstrap/dist/js/xlsx.core.min.js"></script>
<script>
    $(document).ready(function () {
        let id = GetParms("ticket");
        if (id != "" && id != null && id != 'undefined') {
            $("#id").val(id);
            GetDowntimeList();
        }
        getDepartment($("#department-select"));
        getLine($('#line-select'));
        getProject($('#project-select'));
        getStation($('#station-select'));
        getDashboardSystem($("#system-select"));
    });

    //bootstrap-table 获取 downtime 信息
    function GetDowntimeList() {
        $("#dtList").bootstrapTable('destroy').bootstrapTable({
            cache: false,
            type: 'GET',
            url: BasicURL+ '/api/Downtime/Query_ByFilter',
            queryParams: {
                id: $("#id").val(),
                Department: $("#department-select").val(),
                Project: $("#project-select").val(),
                Line: $("#line-select").val(),
                Station: $("#station-select").val(),
                Incidentstatus: $("#status-select").val(),
                starttime: $("#start").val() ? $("#start").val() + " 00:00:00" : null,
                endtime: $("#end").val() ? $("#end").val() + " 23:59:59" : null,
                Respperson: $("#responser").val(),
            },
            ajaxOptions: {                      //传参ajax设置
                traditional: true,              //允许传递数组类型的参数
            },
            search: true,                       //开启搜索框
            visibleSearch: true,
            showSearchButton: false,
            showColumns: true,
            sortable: true,                     //是否启用排序
            sortName: 'finishtime',
            sortOrder: "desc",
            dataType: 'json',
            pagination: true,
            paginationLoop: false,
            pageSize: 10,
            pageList: '[10, 50 ,100 ,200, 500, ALL]',
            showExport: function (row, index) {
                var sUserAgent = navigator.userAgent.toLowerCase();
                var bIsIpad = sUserAgent.match(/ipad/i) == "ipad";
                var bIsIphoneOs = sUserAgent.match(/iphone os/i) == "iphone os";
                var bIsMidp = sUserAgent.match(/midp/i) == "midp";
                var bIsUc7 = sUserAgent.match(/rv:1.2.3.4/i) == "rv:1.2.3.4";
                var bIsUc = sUserAgent.match(/ucweb/i) == "ucweb";
                var bIsAndroid = sUserAgent.match(/android/i) == "android";
                var bIsCE = sUserAgent.match(/windows ce/i) == "windows ce";
                var bIsWM = sUserAgent.match(/windows mobile/i) == "windows mobile";
                if (bIsIpad || bIsIphoneOs || bIsMidp || bIsUc7 || bIsUc || bIsAndroid || bIsCE || bIsWM) {
                    return false;
                } else {
                    return true;
                }
            },
            exportDataType: 'basic', //'basic', 'all', 'selected'.
            exportTypes: ['csv', 'excel', 'xlsx'], //导出类型
            exportOptions: {
                fileName: 'Downtime List - ' + formatDate(new Date()), //文件名称设置
                worksheetName: 'Sheet1', //表格工作区名称
                tableName: 'Downtime List',
                excelstyles: ['background-color', 'color', 'font-size', 'font-weight'],
            },
            columns: [{
                field: 'id',
                title: 'Ticket No.',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'comefrom',
                title: 'System',
                align: 'center',
                valign: 'middle',
                visible: false,
            }, {
                field: 'creator',
                title: 'Creator',
                align: 'center',
                valign: 'middle',
                visible: false,
            }, {
                field: 'department',
                title: 'Department',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'responsedep',
                title: 'Responsible department',
                align: 'center',
                valign: 'middle',
            },
            {
                field: 'project',
                title: 'Project',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'line',
                title: 'Line',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'station',
                title: 'Station Name',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'machine',
                title: 'Machine Name',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'urgentlevel',
                title: 'Ugentlevel',
                align: 'center',
                valign: 'middle',
                visible: false,
            }, {
                field: 'occurtime',
                title: 'Start Time',
                align: 'center',
                valign: 'middle',
                formatter: function (value, row, index) {
                    return new Date(value).format('yyyy-MM-dd hh:mm:ss');
                },
            }, {
                field: 'issue',
                title: 'Defect Code',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'issueremark',
                title: 'Issue Description',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'repairtime',
                title: 'Repair Time',
                align: 'center',
                valign: 'middle',
                visible: false,
                formatter: function (value, row, index) {
                    if (value)
                        return new Date(value).format('yyyy-MM-dd hh:mm:ss');
                    else
                        return value;
                },
            }, {
                field: 'respperson',
                title: 'Employee ID',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'finishtime',
                title: 'Finish Time',
                align: 'center',
                valign: 'middle',


                formatter: function (value, row, index) {
                    if (value)
                        return new Date(value).format('yyyy-MM-dd hh:mm:ss');
                    else
                        return value;

                },
            }, {
                field: 'calcdowntime',
                title: 'Calculate Downtime',
                align: 'center',
                valign: 'middle',
                visible: false,
            }, {
                field: 'downtime',
                title: 'Downtime(m)',
                align: 'center',
                valign: 'middle',
                sortable: true,
                formatter: function (value, row, index) {
                    if (row['calcdowntime']) {
                        if (row['finishtime'] == null) {
                            let tmp = new Date(row['occurtime']);
                            let Downtime = new Date() - tmp;
                            return (Downtime / 1000 / 60).toFixed(2);
                        }
                        else {
                            return (Math.abs(value / 60)).toFixed(2);
                        }
                    }
                    else {
                        return 'Null';
                    }
                },
            }, {
                field: 'labor',
                title: 'Labor',
                align: 'center',
                valign: 'middle',
                visible: false,
            }, {
                field: 'rootcause',
                title: 'RC',
                align: 'center',
                valign: 'middle',

            }, {
                field: 'rootcauseremark',
                title: 'RC Description',
                align: 'center',
                valign: 'middle',
                visible: false,
            }, {
                field: 'action',
                title: 'CA',
                align: 'center',
                valign: 'middle',

            }, {
                field: 'actionremark',
                title: 'CA Description',
                align: 'center',
                valign: 'middle',
                visible: false,
            }, {
                field: 'option',
                title: 'Operation',
                align: 'center',
                valign: 'middle',
                formatter: function (value, row, index) {
                    if (row['incidentstatus'] == 0) {
                        return ['<button type="button" class="btn warning text-light" id="close">Close</button>']
                    }
                    else if (row['downtime'] <= 15 * 60) {
                        return ['<button type="button" class="btn gray" id="unedit">RC/CA</button>']
                    }
                    else if (row['incidentstatus'] == 2 && row['actionstatus'] == 2) {
                        return ['<button type="button" class="btn primary text-light" id="edit">RC/CA</button>']
                    } else if (row['incidentstatus'] == 2 && row['actionstatus'] == 3) {
                        return ['<button type="button" class="btn good text-light" id="view">View</button>']
                    } else {
                        return ['<button type="button" class="btn default text-light" id="error">Default</button>']
                    }
                },
                events: {
                    "click #close": function (e, value, row, index) {
                        if (confirm("确定结束维修: " + row['line'] + ' ' + row['station'] + ' : ' + row['issue'])) {
                            $.ajax({
                                url: '/EC/CloseRepaire',
                                method: 'POST',
                                data: {
                                    id: row['id'],
                                },
                                success: function (data) {
                                    showSuccess('维修结束，辛苦了!');   
                                },
                                fail: function (err, status, xhr) {
                                    showWarning(err.responseText);
                                },
                                error: function (err) {
                                    showWarning(err.responseText);
                                },

                                complete: function (res) {

                                    $("#dtList").bootstrapTable("refreshOptions", { url: '/EC/GetDowntimeList' });

                                }
                            })
                        }
                    },
                    "click #edit": function (e, value, row, index) {
                        ShowRCCAEdit(row);
                        $("#RCCAConfirmModal").attr("data-downtimeid", row.id);
                    },
                    "click #view": function (e, value, row, index) {
                        ViewDowntimeInfo(row);
                    }
                }
            }, {
                field: 'analysis',
                title: 'Cookbook',
                align: 'center',
                valign: 'middle',
                formatter: function (value, row, index) {
                    //显示分析页面
                    return ['<button type="button" class="btn gray" id="showanalysis">Cookbook</button>']
                },
                events: {
                    "click #showanalysis": function (e, value, row, index) {
                        GetAnalysis(row);
                        $('#myTab a[href="#analysisTab"]').tab('show');
                    }
                }
            }]
        })
        $('#myTab a[href="#downtimeTab"]').tab('show')
    }

    //显示分析结果
    function GetAnalysis(row) {
        $("#asList").bootstrapTable('destroy').bootstrapTable({
            cache: false,
            type: 'GET',
            url: '/IssueSummary/GetIssueSummary',
            queryParams: {
                Department: row['department'],
                Project: row['project'],
                Line: row['line'],
                Station: row['station'],
                issue: row['issue'],
            },
            dataType: 'json',
            columns: [{
                field: 'issue',
                title: 'Defect Code',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'totalqty',
                title: 'Accumulative QTY',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'totalPercent',
                title: 'Percentage%',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'rootcause',
                title: 'Root Cause',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'qty',
                title: 'Sub QTY',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'subPercent',
                title: 'Sub Percentage%',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'action',
                title: 'Analysis Steps',
                align: 'center',
                valign: 'middle',
            },],
            onLoadSuccess: function (data) {
                var data = $('#asList').bootstrapTable('getData', true);
                //合并单元格
                mergeCells(data, "issue", 1, $('#asList'));

                //增加ecahrts
                var ecahrtsData = []
                var legen = []
                var piedata = [];
                for (var prop in data) {
                    legen.push(data[prop]['rootcause']);
                    ecahrtsData.push(data[prop]['qty']);
                    piedata.push({
                        value: data[prop]['qty'],
                        name: data[prop]['rootcause'],
                    });
                }
                FrequencyChart(ecahrtsData, legen);
                PercentChart(piedata);
            }
        });
    }

</script>
