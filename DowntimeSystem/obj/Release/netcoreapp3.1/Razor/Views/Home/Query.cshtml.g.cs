#pragma checksum "C:\Users\Administrator\Documents\GitHub\DowntimeSystem\DowntimeSystem\Views\Home\Query.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bbd9d89b37c56547c5be504f117679dff535c543"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Query), @"mvc.1.0.view", @"/Views/Home/Query.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Administrator\Documents\GitHub\DowntimeSystem\DowntimeSystem\Views\_ViewImports.cshtml"
using DowntimeSystem;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Administrator\Documents\GitHub\DowntimeSystem\DowntimeSystem\Views\_ViewImports.cshtml"
using DowntimeSystem.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bbd9d89b37c56547c5be504f117679dff535c543", @"/Views/Home/Query.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c1f65d23891b8638a5e8a53fe79ce94a78a82dbb", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Query : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "5", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "4", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap/dist/js/select2.full.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", new global::Microsoft.AspNetCore.Html.HtmlString("text/javascript"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/customer.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/cookie.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/echarts/dist/js/echarts.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap/dist/js/bootstrap-table.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap/dist/js/bootstrap-table-export.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap/dist/js/tableExport.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap/dist/js/FileSaver.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/bootstrap/dist/js/xlsx.core.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Administrator\Documents\GitHub\DowntimeSystem\DowntimeSystem\Views\Home\Query.cshtml"
  
    ViewData["Title"] = "Downtime List";

#line default
#line hidden
#nullable disable
            WriteLiteral("<div class=\"container-fluid\">\r\n    <div class=\"panel-default\">\r\n        <div class=\"panel-heading\"><i class=\"fa fa-cogs \"></i> ");
#nullable restore
#line 6 "C:\Users\Administrator\Documents\GitHub\DowntimeSystem\DowntimeSystem\Views\Home\Query.cshtml"
                                                          Write(ViewData["Title"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</div>
        <div class=""panel-body"">
            <div class=""row"">
                <div class=""col-lg-2 col-xs-3 col-sm-3 col-md-2"" style=""display:none"">
                    <label class=""form-label""> System:</label>
                    <select id=""system-select"" class=""form-control selectpicker"" title=""Select System"" data-size=""6"" multiple data-max-options=""1"">
                    </select>
                </div>
                <div class=""col-lg-2 col-xs-3 col-sm-3 col-md-2"">
                    <label class=""form-label""> Department:</label>
                    <select id=""department-select"" class=""form-control selectpicker"" title=""Select Department"" data-size=""6"" multiple data-max-options=""1"" data-live-search=""true""></select>
                </div>
                <div class=""col-lg-2 col-xs-3 col-sm-3 col-md-2"">
                    <label class=""form-label""> Project:</label>
                    <select id=""project-select"" class=""form-control selectpicker"" title=""Select Project"" data-size");
            WriteLiteral(@"=""6"" multiple data-max-options=""1"" data-live-search=""true"" onchange=""getLine($('#line-select'),$('#project-select').val()); getStation($('#station-select'), $('#department-select').val(), $('#project-select').val(),$('#line-select').val())""> </select>
                </div>
                <div class=""col-lg-2 col-xs-3 col-sm-3 col-md-2"">
                    <label class=""form-label""> Line:</label>
                    <select id=""line-select"" class=""form-control selectpicker"" title=""Select Line"" data-size=""6"" multiple data-max-options=""1"" data-live-search=""true"" onchange="" getStation($('#station-select'), $('#department-select').val(), $('#project-select').val(),$('#line-select').val());""></select>
                </div>
                <div class=""col-lg-2 col-xs-3 col-sm-3 col-md-2"">
                    <label class=""form-label""> Station:</label>
                    <select id=""station-select"" class=""form-control selectpicker"" title=""Select Station"" data-size=""6"" multiple data-max-options=""1"" data-l");
            WriteLiteral(@"ive-search=""true""></select>
                </div>
                <div class=""col-xl-2 col-lg-2 col-md-3 col-sm-4"">
                    <label class=""form-label""> Time Range:</label>
                    <select id=""timeZone"" class=""form-control selectpicker"" title=""Select Time Zone"" data-size=""6"" data-max-options=""1"" onchange=""updateTime()"">
                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bbd9d89b37c56547c5be504f117679dff535c54311973", async() => {
                WriteLiteral("Today");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bbd9d89b37c56547c5be504f117679dff535c54313156", async() => {
                WriteLiteral("Current Week");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bbd9d89b37c56547c5be504f117679dff535c54314346", async() => {
                WriteLiteral("Last Week");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bbd9d89b37c56547c5be504f117679dff535c54315533", async() => {
                WriteLiteral("Current Month");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bbd9d89b37c56547c5be504f117679dff535c54316724", async() => {
                WriteLiteral("Last Month");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bbd9d89b37c56547c5be504f117679dff535c54317912", async() => {
                WriteLiteral("Customize");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                    </select>
                </div>
                <div class=""col-lg-2 col-xs-3 col-sm-3 col-md-2"">
                    <label class=""form-label""> Ticket Status:</label>
                    <select id=""status-select"" class=""form-control selectpicker"" title=""Select Status"" multiple data-max-options=""1"">
                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bbd9d89b37c56547c5be504f117679dff535c54319438", async() => {
                WriteLiteral("New Open");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bbd9d89b37c56547c5be504f117679dff535c54320624", async() => {
                WriteLiteral("On-going");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bbd9d89b37c56547c5be504f117679dff535c54321810", async() => {
                WriteLiteral("Closed");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                    </select>
                </div>
                <div class=""col-lg-2 col-md-2 col-xs-3 col-sm-3 "">
                    <label class=""form-label"" for=""id""> Ticket No: </label>
                    <input type='text' class=""form-control"" id='id' />
                </div>
                <div class=""col-lg-2 col-md-2 col-xs-3 col-sm-3 "">
                    <label class=""form-label"" for=""responser""> Employee ID: </label>
                    <input type='text' class=""form-control"" id='responser' placeholder=""--请输入工号 (WY0000) --"" />
                </div>
                <div class=""col-lg-2 col-md-2 col-xs-3 col-sm-3 invisible"">
                    <label class=""form-label"" for=""start""> Start Date:</label>
                    <div class='input-group date form_datetime'>
                        <input type='text' class=""form-control"" id='start' />
                        <span class=""input-group-addon"">
                            <span class=""fa fa-calendar""></span>
         ");
            WriteLiteral(@"               </span>
                    </div>
                </div>
                <div class=""col-lg-2 col-md-2 col-xs-3 col-sm-3 invisible "">
                    <label class=""form-label"" for=""end""> Finish Date: </label>
                    <div class='input-group date form_datetime'>
                        <input type='text' class=""form-control"" id='end' />
                        <span class=""input-group-addon"">
                            <span class=""fa fa-calendar""></span>
                        </span>
                    </div>
                </div>

                <div class=""col-lg-1  col-xs-1 col-sm-1 col-md-1"" style=""padding-top:27px""><button type=""button"" class=""btn btn-primary"" id=""search"" onclick=""GetDowntimeList()"">Search</button></div>
                <div class=""col-lg-1  col-xs-1 col-sm-1 col-md-1"" style=""padding-top:27px""><button type=""button"" class=""btn btn-success"" id=""new"" style=""width: 110px"">Create Ticket</button></div>
            </div>
        </div>
   ");
            WriteLiteral(@" </div>
</div>


<ul id=""myTab"" class=""nav nav-tabs"" role=""tablist"">
    <li class=""nav-item""><a class=""nav-link "" id=""analysis-tab"" href=""#analysisTab"" data-toggle=""tab"" role=""tab"" aria-selected=""false"">Cookbook</a></li>
    <li class=""nav-item""><a class=""nav-link active"" id=""downtimet-tab"" href=""#downtimeTab"" data-toggle=""tab"" role=""tab"" aria-selected=""true"">Downtime</a></li>
</ul>
<div id=""myTabContent"" class=""tab-content border border-top-0"">
    <div class=""tab-pane fade"" id=""analysisTab"" role=""tabpanel"" aria-labelledby=""analysis-tab"">
        <div class=""row"" style=""margin-bottom:10px;margin-top:10px;display:none"">
            <div class=""col-xl-6 col-lg-6 col-md-12 col-sm-12 col-xs-12"">
                <div id=""frequencychart"" class=""mychart"" style=""width:100%;height:300px""> frequency</div>
            </div>
            <div class=""col-xl-6 col-lg-6 col-md-12 col-sm-12 col-xs-12 "">
                <div id=""percentchart"" class=""mychart"" style=""width:100%;height:300px""> percent </div>
  ");
            WriteLiteral(@"          </div>
        </div>
        <table id=""asList"" class=""tablegreen""></table>
    </div>
    <div class=""tab-pane fade  show active"" id=""downtimeTab"" role=""tabpanel"" aria-labelledby=""downtimet-tab"">
        <table id=""dtList""></table>
    </div>
</div>

<div class=""modal fade"" id=""CreateIncidenceModal"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"" data-backdrop=""static"">
    <div class=""modal-dialog"" role=""document"" style=""width: 30%;min-width:150px"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""title"" style=""text-wrap:normal"">创建 Downtime 信息</h5>
            </div>
            <div class=""modal-body row"">
                <div class=""col-lg-6"">
                    <label for=""cr-department"" class=""form-label text-right warning-text"">Department:</label>
                    <input type='text' class=""form-control need create-input"" data-remark=""部门"" id='cr-department' placeholder=""---例 : ME--");
            WriteLiteral(@"-"" />
                </div>
                <div class=""col-lg-6"">
                    <label for=""cr-line"" class=""form-label text-right warning-text"">Line:</label>
                    <input type='text' class=""form-control need create-input"" data-remark=""线体"" id='cr-line' placeholder=""---例 : Bay13---"" />
                </div>
                <div class=""col-lg-6"">
                    <label for=""cr-project"" class=""form-label text-right warning-text"">Project:</label>
                    <input type='text' class=""form-control need create-input"" data-remark=""项目"" id='cr-project' placeholder=""---例 : AOP---"" />
                </div>
                <div class=""col-lg-6"">
                    <label for=""cr-station"" class=""form-label text-right warning-text"">Station:</label>
                    <input type='text' class=""form-control need create-input"" data-remark=""站位"" id='cr-station' placeholder=""---例 : UV---"" />
                </div>
                <div class=""col-lg-6"">
                    <labe");
            WriteLiteral(@"l for=""cr-machine"" class=""form-label text-right warning-text"">Machine:</label>
                    <input type='text' class=""form-control need create-input"" data-remark=""机器名"" id='cr-machine' placeholder=""---例 : WUXDRX0001---"" />
                </div>
                <div class=""col-lg-6"">
                    <label for=""cr-occtime"" class=""form-label text-right warning-text"">Start Time:</label>
                    <div class='input-group date form_datetime' id=""createDT"">
                        <input type='text' class=""form-control need create-input"" data-remark="" Downtime 发生时间"" id='cr-occtime' />
                        <span class=""input-group-addon"">
                            <span class=""fa fa-calendar""></span>
                        </span>
                    </div>
                </div>
                <div class=""col-lg-12"">
                    <label for=""cr-issue"" class=""form-label text-right warning-text"">Defect Code:</label>
                    <input type='text' class=""form-co");
            WriteLiteral(@"ntrol need create-input"" data-remark=""问题"" id='cr-issue' placeholder=""---请输入问题---"" />
                </div>
                <div class=""col-lg-12"">
                    <label for=""cr-issueremark"" class=""form-label text-right"">Issue Description:</label>
                    <textarea type='text' class=""form-control create-input"" id='cr-issueremark' placeholder=""---请输入问题描述---""></textarea>
                </div>
                <div class=""col-lg-12"">
                    <label for=""cr-creator"" class=""form-label text-right warning-text"">Reporter:</label>
                    <input type='text' class=""form-control need create-input"" data-remark=""创建人"" id='cr-creator' placeholder=""---例 : W1234---"" />
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-success"" onclick=""CreateIncidence()"">Submit</button>
                <button type=""button"" class=""btn btn-danger"" data-dismiss=""modal"" aria-label=""Close"">Close</button>
     ");
            WriteLiteral(@"       </div>
        </div>
    </div>
</div>
<div class=""modal fade"" id=""StartRepaireModal"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"" data-backdrop=""static"">
    <div class=""modal-dialog"" role=""document"" style=""width: 30%;min-width:150px "">
        <div class=""modal-content"" ");
            WriteLiteral(@">
            <div class=""modal-header"" style=""background-color: #a73d3d; color: white"">
                <h5 class=""modal-title"" id=""title"" style=""text-wrap:normal"">注册维修人员信息</h5>
            </div>
            <div class=""modal-body row"">
                <div class=""col-lg-6"">
                    <label for=""sr-department"" class=""form-label text-right"">Department:</label>
                    <input type='text' class=""form-control"" readonly id='sr-department' />
                </div>
                <div class=""col-lg-6"">
                    <label for=""sr-line"" class=""form-label text-right"">Line:</label>
                    <input type='text' class=""form-control"" readonly id='sr-line' />
                </div>
                <div class=""col-lg-6"">
                    <label for=""sr-project"" class=""form-label text-right"">Project:</label>
                    <input type='text' class=""form-control"" readonly id='sr-project' />
                </div>
                <div class=""col-lg-6"">
     ");
            WriteLiteral(@"               <label for=""sr-station"" class=""form-label text-right"">Station:</label>
                    <input type='text' class=""form-control"" readonly id='sr-station' />
                </div>
                <div class=""col-lg-12"">
                    <label for=""sr-machine"" class=""form-label text-right"">Machine:</label>
                    <input type='text' class=""form-control"" readonly id='sr-machine' />
                </div>
                <div class=""col-lg-12"">
                    <label for=""sr-issue"" class=""form-label text-right"">Defect Code:</label>
                    <input type='text' class=""form-control"" readonly id='sr-issue' />
                </div>
                <div class=""col-lg-12"">
                    <label for=""sr-issueremark"" class=""form-label text-right"">Issue Description:</label>
                    <textarea type='text' class=""form-control"" readonly id='sr-issueremark'></textarea>
                </div>
                <div class=""col-lg-12"">
               ");
            WriteLiteral(@"     <label for=""sr-downtime"" class=""form-label text-right"">New Open Duration [HH:mm:ss]:</label>
                    <input type='text' class=""form-control"" readonly id='sr-downtime' />
                </div>
                <div class=""col-lg-12"">
                    <label for=""sr-employee"" class=""form-label text-right warning-text"">Employee ID:</label>
                    <input type='text' class=""form-control"" id='sr-employee' placeholder=""---例 : W1234---"" />
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-success"" id=""startRepaire"">Go 2 Fix</button>
                <button type=""button"" class=""btn btn-danger"" data-dismiss=""modal"" aria-label=""Close"">Cancel</button>
            </div>
        </div>
    </div>
</div>
<div class=""modal fade"" id=""CAModal"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"" data-backdrop=""static"">
    <div class=""modal-dialog"" role=""document"" style=""width: 5");
            WriteLiteral("0%;min-width:150px\">\r\n        <div class=\"modal-content\" ");
            WriteLiteral(@">
            <div class=""modal-header"" style=""background-color: #3e9472; color: white"">
                <h5 class=""modal-title"" id=""CA-title"" style=""text-wrap:normal"">填写 RootCause 和 CA </h5>
            </div>
            <div class=""modal-body row"">
                <div class=""col-lg-2"">
                    <label for=""ca-department"" class=""form-label text-right"">Department:</label>
                    <input type='text' class=""form-control"" readonly id='ca-department' />
                </div>
                <div class=""col-lg-2"">
                    <label for=""ca-project"" class=""form-label text-right"">Project:</label>
                    <input type='text' class=""form-control"" readonly id='ca-project' />
                </div>
                <div class=""col-lg-2"">
                    <label for=""ca-line"" class=""form-label text-right"">Line:</label>
                    <input type='text' class=""form-control"" readonly id='ca-line' />
                </div>
                <div class=""col-");
            WriteLiteral(@"lg-3"">
                    <label for=""ca-station"" class=""form-label text-right warning-text"">Station:</label>
                    <input type='text' class=""form-control raca noNull"" id='ca-station' noNull=""Station"" />
                </div>
                <div class=""col-lg-3"">
                    <label for=""ca-machine"" class=""form-label text-right warning-text"">Equipment ID:</label>
                    <select class=""form-control raca noNull"" id='ca-machine' data-size=""6"" title=""--Select EQID--"" noNull=""Equipment"" onchange=""GetEQIDLink_PN($('#ca-pn'), $('#ca-machine').val())""></select>
                </div>
                <div class=""col-lg-12"">
                    <label for=""ca-issue"" class=""form-label text-right warning-text"">Defect Code:</label>
                    <input type='text' class=""form-control raca noNull"" id='ca-issue' noNull=""Defect Code"" />
                </div>
                <div class=""col-lg-12"">
                    <label for=""ca-issueremark"" class=""form-label text-r");
            WriteLiteral(@"ight"">Issue Description:</label>
                    <textarea type='text' class=""form-control raca"" id='ca-issueremark'></textarea>
                </div>
                <div class=""col-lg-3"">
                    <label for=""ca-employee"" class=""form-label text-right warning-text"">Employee ID:</label>
                    <input type='text' class=""form-control raca noNull"" id='ca-employee' noNull=""Employee ID""/>
                </div>
                <div class=""col-lg-3"">
                    <label for=""ca-labor"" class=""form-label text-right"">Labor:</label>
                    <input type='number' step=""1"" class=""form-control raca"" id='ca-labor' value=""1"" title=""1"" />
                </div>
");
            WriteLiteral(@"                <div class=""col-lg-3"">
                    <label class=""form-label text-right warning-text"">Sparepart Change:</label>
                    <div class=""radio-group"">
                        <label style=""font-weight:600""><input type='radio' name=""sparepartchange"" value=""true"" /> YES</label>   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        <label style=""font-weight:600""><input type='radio' name=""sparepartchange"" value=""false"" checked /> NO</label>
                    </div>
                </div>
");
            WriteLiteral(@"                <fieldset class=""step-slide ngMES-border row downtime-item"" style=""position: relative; margin: 10px 10px; "">
                    <legend class=""ngMES-border"">Downtime 时间</legend>

                    <div class=""col-lg-6  "">
                        <label for=""ca-starttime"" class=""form-label text-right warning-text"">Start Time:</label>
                        <input type='text' class=""form-control"" id='ca-starttime' readonly />
                    </div>
                    <div class=""col-lg-12  "" style=""display:none"">
                        <label for=""ca-downtime"" class=""form-label text-right warning-text"">Dowmtime [HH:mm:ss]:</label>
                        <input type='text' class=""form-control"" id='ca-downtime' readonly />
                    </div>
                    <div class=""col-lg-6 "">
                        <label for=""ca-responsetime"" class=""form-label text-right"">DownTime [HH:mm:ss]:</label>
                        <input type='text' class=""form-control"" id='ca-r");
            WriteLiteral(@"esponsetime' readonly />
                    </div>
                    <div class=""col-lg-6  "">
                        <label for=""ca-finishtime"" class=""form-label text-right warning-text"">End Time:</label>
                        <input type='text' class=""form-control"" id='ca-finishtime' readonly />
                    </div>
");
            WriteLiteral("                </fieldset>\r\n");
            WriteLiteral(@"                <fieldset class=""step-slide ngMES-border row"" style=""position: relative; margin: 10px 10px; "">
                    <legend class=""ngMES-border"">RC & CA</legend>
                    <div class=""col-lg-6"">
                        <label for=""ca-rootcause"" class=""form-label text-right warning-text"">Root Cause:</label>
                        <input type='text' class=""form-control raca noNull"" id='ca-rootcause' noNull=""Root Cause"" />
                    </div>
                    <div class=""col-lg-6"">
                        <label for=""ca-action"" class=""form-label text-right warning-text"">Corrective Action:</label>
                        <input type='text' class=""form-control raca noNull"" id='ca-action' noNull=""Action"" />
                    </div>
                    <div class=""col-lg-6"">
                        <label for=""ca-rootcauseremark"" class=""form-label text-right"">RC Remark:</label>
                        <textarea type='text' class=""form-control raca"" id='ca-rootcausere");
            WriteLiteral(@"mark'></textarea>
                    </div>
                    <div class=""col-lg-6"">
                        <label for=""ca-actionremark"" class=""form-label text-right"">CA Remark:</label>
                        <textarea type='text' class=""form-control raca"" id='ca-actionremark'></textarea>
                    </div>
                </fieldset>
");
            WriteLiteral(@"                <fieldset class=""step-slide ngMES-border sparepart-item elehide"" style=""position: relative; margin: 10px 10px; "">
                    <legend class=""ngMES-border"">备件更换记录</legend>
                    <div class=""row"">
                        <div class=""col-lg-3 "">
                            <label for=""ca-category"" class=""form-label text-right"">Category:</label>
                            <select class=""form-control selectpicker raca"" id='ca-category' data-size=""6"" title=""--Select Category--"" onchange=""GetSPSubCategory($('#ca-subcategory'), $('#ca-category').val());GetAllPN($('#ca-pn'), $('#ca-category').val(),$('#ca-subcategory').val())""></select>
                        </div>
                        <div class=""col-lg-3 "">
                            <label for=""ca-subcategory"" class=""form-label text-right"">Sub Category:</label>
                            <select class=""form-control selectpicker raca"" id='ca-subcategory' data-size=""6"" title=""--Select Sub Category--"" onchange=""Ge");
            WriteLiteral(@"tAllPN($('#ca-pn'), $('#ca-category').val(),$('#ca-subcategory').val())""></select>
                        </div>
                        <div class=""col-lg-3 "">
                            <label for=""ca-pn"" class=""form-label text-right warning-text"">P_N:</label>
                            <select class=""form-control selectpicker raca"" id='ca-pn' data-size=""6"" title=""--Select PN--"" data-live-search=""true"">
                                <optgroup label=""PN Linked with EQID""></optgroup>
                                <optgroup label=""Other PN""></optgroup>
                            </select>
                        </div>
                        <div class=""col-lg-2"">
                            <label for=""ca-qty"" class=""form-label text-right warning-text"">QTY:</label>
                            <input type='number' step=""1"" class=""form-control raca"" id='ca-qty' />
                        </div>
                        <div class=""col-lg-1 "">
                            <button class=""btn ");
            WriteLiteral(@"btn-success"" style=""margin-top:27px"" data-toggle=""tooltip"" title=""添加记录"" id=""btn_addsparepart""><i class=""fa fa-plus""></i></button>
                        </div>
                    </div>
                    <table id=""sparepart_table"" class=""table table table-striped table-hover"" style=""width:100%""></table>
                </fieldset>
                <fieldset class=""step-slide ngMES-border sparepart-item-view elehide"" style=""position: relative; margin: 10px 10px; "">
                    <legend class=""ngMES-border"">备件更换记录</legend>
                    <table id=""sparepart_view_table"" class=""table table table-striped table-hover"" style=""width:100%""></table>
                </fieldset>
");
            WriteLiteral(@"            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-success"" id=""addCA"">Submit</button>
                <button type=""button"" class=""btn btn-danger"" data-dismiss=""modal"" aria-label=""Close"">Cancel</button>
            </div>
        </div>
    </div>
</div>
<div class=""modal fade"" id=""AnalysisEditModal"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"" data-backdrop=""static"">
    <div class=""modal-dialog"" role=""document"" style=""width: 50%;min-width:150px"">
        <div class=""modal-content"" ");
            WriteLiteral(@">
            <div class=""modal-header"" style=""background-color: #3e9472; color: white"">
                <h5 class=""modal-title"" id=""CA-title"" style=""text-wrap:normal"">编辑纠正预防措施</h5>
            </div>
            <div class=""modal-body row"">
                <div class=""col-lg-3"">
                    <label for=""analysis-department"" class=""form-label text-right"">Department:</label>
                    <input type='text' class=""form-control"" readonly id='analysis-department' />
                </div>
                <div class=""col-lg-3"">
                    <label for=""analysis-line"" class=""form-label text-right"">Line:</label>
                    <input type='text' class=""form-control"" readonly id='analysis-line' />
                </div>
                <div class=""col-lg-3"">
                    <label for=""analysis-project"" class=""form-label text-right"">Project:</label>
                    <input type='text' class=""form-control"" readonly id='analysis-project' />
                </div>
      ");
            WriteLiteral(@"          <div class=""col-lg-3"">
                    <label for=""analysis-station"" class=""form-label text-right"">Station:</label>
                    <input type='text' class=""form-control "" readonly id='analysis-station' />
                </div>
                <div class=""col-lg-12"">
                    <label for=""analysis-issue"" class=""form-label text-right warning-text"">Defect Code:</label>
                    <input type='text' class=""form-control "" readonly id='analysis-issue' />
                </div>
");
            WriteLiteral(@"                <div class=""col-lg-6"">
                    <label for=""analysis-rootcause"" class=""form-label text-right warning-text"">Root Cause:</label>
                    <textarea class=""form-control "" id='analysis-rootcause' rows=""6"" readonly></textarea>
                </div>
                <div class=""col-lg-6"">
                    <label for=""analysis-action"" class=""form-label text-right warning-text"">Action:</label>
                    <textarea class=""form-control "" id='analysis-action' rows=""6""></textarea>
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-success"" id=""EditAnalysis"" onclick=""EditAnalysis()"">Submit</button>
                <button type=""button"" class=""btn btn-danger"" data-dismiss=""modal"" aria-label=""Close"">Cancel</button>
            </div>
        </div>
    </div>
</div>

");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bbd9d89b37c56547c5be504f117679dff535c54347173", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bbd9d89b37c56547c5be504f117679dff535c54348296", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bbd9d89b37c56547c5be504f117679dff535c54349336", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bbd9d89b37c56547c5be504f117679dff535c54350376", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bbd9d89b37c56547c5be504f117679dff535c54351417", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bbd9d89b37c56547c5be504f117679dff535c54352458", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bbd9d89b37c56547c5be504f117679dff535c54353499", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bbd9d89b37c56547c5be504f117679dff535c54354540", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bbd9d89b37c56547c5be504f117679dff535c54355581", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script>
    $(document).ready(function () {
        let id = GetParms(""ticket"");
        if (id != """" && id != null && id != 'undefined') {
            $(""#id"").val(id);
            GetDowntimeList();
        }
        iniDatetimepicker();
        getDepartment($(""#department-select""));
        getLine($('#line-select'));
        getProject($('#project-select'));
        getStation($('#station-select'));
        getDashboardSystem($(""#system-select""));
        //var name = getCookie('dt-displayname');   //自动获取当前维修人员信息
        $(""#timeZone option[value='5']"").attr(""selected"", true);
        $(""#timeZone"").selectpicker('refresh');
        $(""#timeZone"").trigger(""onchange"");
    });

    function updateTime() {
        var today = new Date()
        $(""#start"").parent().parent().addClass(""invisible"");
        $(""#end"").parent().parent().addClass(""invisible"");
        switch ($(""#timeZone"").val()) {
            case ""0"": //Customer
                $(""#start"").parent().parent().removeCl");
            WriteLiteral(@"ass(""invisible"");
                $(""#end"").parent().parent().removeClass(""invisible"");
                showSuccess(""自定义时间范围"");
                break;
            case ""1"": //Current Week
                var dayOfWeek = today.getDay();
                if (dayOfWeek == 0) dayOfWeek = 7;
                var lastDay = new Date(today.getTime() - (dayOfWeek - 1) * 86400000); //本周的第一天
                $(""#start"").val(lastDay.format(""yyyy-MM-dd""));
                $(""#end"").val(today.format(""yyyy-MM-dd""));
                showSuccess(""显示本周数据"");
                break;
            case ""4"": //Last Week
                var dayOfWeek = today.getDay();
                if (dayOfWeek == 0) dayOfWeek = 7;
                var endDay = new Date(today.getTime() - (dayOfWeek) * 86400000); //上周最后一天
                var startDay = new Date(today.getTime() - (dayOfWeek + 6) * 86400000); //上周第一天
                $(""#start"").val(startDay.format(""yyyy-MM-dd""));
                $(""#end"").val(endDay.format(""yyyy-MM-dd""))");
            WriteLiteral(@";
                showSuccess(""显示上周数据"");
                break;
            case ""2"": //Current Month
                $(""#start"").val(new Date(today.getFullYear() + ""-"" + (today.getMonth() + 1).toString() + ""-01"").format(""yyyy-MM-dd""));
                $(""#end"").val(today.format(""yyyy-MM-dd""));
                showSuccess(""显示本月数据"");
                break;
            case ""3"": //Last Month
                $(""#start"").val(new Date(today.getFullYear() + ""-"" + (today.getMonth()).toString() + ""-01"").format(""yyyy-MM-dd""));
                var EndOfMonth = new Date();
                EndOfMonth.setDate(0);   //上个月的最后一天
                $(""#end"").val(EndOfMonth.format(""yyyy-MM-dd""));
                showSuccess(""显示上月数据"");
                break;
            case ""5"": //Current Day
                $(""#start"").val(today.format(""yyyy-MM-dd""));
                $(""#end"").val(today.format(""yyyy-MM-dd""));
                showSuccess(""显示当天数据"");
                break;
            default:
                b");
            WriteLiteral(@"reak;
        }
    }

    //bootstrap-table 获取 downtime 信息
    function GetDowntimeList() {
        $(""#dtList"").bootstrapTable('destroy').bootstrapTable({
            cache: false,
            type: 'GET',
            url: '/EC/GetDowntimeList',
            queryParams: {
                id: $(""#id"").val(),
                Department: $(""#department-select"").val()[0],
                Project: $(""#project-select"").val()[0],
                Line: $(""#line-select"").val()[0],
                Station: $(""#station-select"").val()[0],
                Incidentstatus: $(""#status-select"").val()[0],
                comefrom: $(""#system-select"").val()[0],
                starttime: $(""#start"").val() ? $(""#start"").val() + "" 00:00:00"" : null,
                endtime: $(""#end"").val() ? $(""#end"").val() + "" 23:59:59"" : null,
                Respperson: $(""#responser"").val(),
            },
            search: true,                       //开启搜索框
            visibleSearch: true,
            showSearchBu");
            WriteLiteral(@"tton: false,
            showColumns: true,
            dataType: 'json',
            pagination: true,
            paginationLoop: false,
            pageSize: 10,
            pageList: '[10, 50 ,100 ,200, 500, ALL]',
            showExport: function (row, index) {
                var sUserAgent = navigator.userAgent.toLowerCase();
                var bIsIpad = sUserAgent.match(/ipad/i) == ""ipad"";
                var bIsIphoneOs = sUserAgent.match(/iphone os/i) == ""iphone os"";
                var bIsMidp = sUserAgent.match(/midp/i) == ""midp"";
                var bIsUc7 = sUserAgent.match(/rv:1.2.3.4/i) == ""rv:1.2.3.4"";
                var bIsUc = sUserAgent.match(/ucweb/i) == ""ucweb"";
                var bIsAndroid = sUserAgent.match(/android/i) == ""android"";
                var bIsCE = sUserAgent.match(/windows ce/i) == ""windows ce"";
                var bIsWM = sUserAgent.match(/windows mobile/i) == ""windows mobile"";
                if (bIsIpad || bIsIphoneOs || bIsMidp || bIsUc7 || bIsUc |");
            WriteLiteral(@"| bIsAndroid || bIsCE || bIsWM) {
                    return false;
                } else {
                    return true;
                }
            },
            exportDataType: 'basic', //'basic', 'all', 'selected'.
            exportTypes: ['csv', 'excel', 'xlsx'], //导出类型
            exportOptions: {
                fileName: 'Downtime List - ' + formatDate(new Date()), //文件名称设置
                worksheetName: 'Sheet1', //表格工作区名称
                tableName: 'Downtime List',
                excelstyles: ['background-color', 'color', 'font-size', 'font-weight'],
            },
            columns: [{
                field: 'id',
                title: 'Ticket No.',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'comefrom',
                title: 'System',
                align: 'center',
                valign: 'middle',
                visible: false,
            }, {
                field: 'creator',
              ");
            WriteLiteral(@"  title: 'Creator',
                align: 'center',
                valign: 'middle',
                visible: false,
            }, {
                field: 'department',
                title: 'Department',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'project',
                title: 'Project',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'line',
                title: 'Line',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'station',
                title: 'Station Name',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'machine',
                title: 'Machine Name',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'urgentlevel',
                title: 'Ugentlevel',
           ");
            WriteLiteral(@"     align: 'center',
                valign: 'middle',
                visible: false,
            }, {
                field: 'occurtime',
                title: 'Start Time',
                align: 'center',
                valign: 'middle',
                formatter: function (value, row, index) {
                    return new Date(value).format('yyyy-MM-dd hh:mm:ss');
                },
            }, {
                field: 'issue',
                title: 'Defect Code',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'issueremark',
                title: 'Issue Description',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'repairtime',
                title: 'Repair Time',
                align: 'center',
                valign: 'middle',
                formatter: function (value, row, index) {
                    if (value)
                        return n");
            WriteLiteral(@"ew Date(value).format('yyyy-MM-dd hh:mm:ss');
                    else
                        return value;
                },
            }, {
                field: 'respperson',
                title: 'Employee ID',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'finishtime',
                title: 'Finish Time',
                align: 'center',
                valign: 'middle',
                formatter: function (value, row, index) {
                    if (value)
                        return new Date(value).format('yyyy-MM-dd hh:mm:ss');
                    else
                        return value;
                },
            }, {
                field: 'calcdowntime',
                title: 'Calculate Downtime',
                align: 'center',
                valign: 'middle',
                visible: false,
            }, {
                field: 'downtime',
                title: 'Downtime(m)',
          ");
            WriteLiteral(@"      align: 'center',
                valign: 'middle',
                sortable: true,
                formatter: function (value, row, index) {
                    if (row['calcdowntime']) {
                        if (row['finishtime'] == null) {
                            let tmp = new Date(row['occurtime']);
                            let Downtime = new Date() - tmp;
                            return (Downtime / 1000 / 60).toFixed(2);
                        }
                        else {
                            return (Math.abs(value / 60)).toFixed(2);
                        }
                    }
                    else {
                        return 'Null';
                    }
                },
            }, {
                field: 'labor',
                title: 'Labor',
                align: 'center',
                valign: 'middle',
                visible: false,
            }, {
                field: 'rootcause',
                title: 'RC',
     ");
            WriteLiteral(@"           align: 'center',
                valign: 'middle',
                visible: false,
            }, {
                field: 'rootcauseremark',
                title: 'RC Description',
                align: 'center',
                valign: 'middle',
                visible: false,
            }, {
                field: 'action',
                title: 'CA',
                align: 'center',
                valign: 'middle',
                visible: false,
            }, {
                field: 'actionremark',
                title: 'CA Description',
                align: 'center',
                valign: 'middle',
                visible: false,
            }, {
                field: 'option',
                title: 'Operation',
                align: 'center',
                valign: 'middle',
                formatter: function (value, row, index) {
                    if (row['incidentstatus'] == 0) {
                        return ['<button type=""button"" class=""bt");
            WriteLiteral(@"n bad text-light"" id=""start"">Attendance</button>']
                    } else if (row['incidentstatus'] == 1) {
                        return ['<button type=""button"" class=""btn warning text-light"" id=""close"">Close</button>']
                    } else if (row['incidentstatus'] == 2 && row['actionstatus'] == 2) {
                        return ['<button type=""button"" class=""btn primary text-light"" id=""edit"">RC/CA</button>']
                    } else if (row['incidentstatus'] == 2 && row['actionstatus'] == 3) {
                        return ['<button type=""button"" class=""btn good text-light"" id=""view"">View</button>']
                    } else {
                        return ['<button type=""button"" class=""btn .default text-light"" id=""error"">Default</button>']
                    }
                },
                events: {
                    ""click #start"": function (e, value, row, index) {
                        $(""#sr-department"").val(row['department']);
                        $(""#sr-pr");
            WriteLiteral(@"oject"").val(row['project']);
                        $(""#sr-line"").val(row['line']);
                        $(""#sr-station"").val(row['station']);
                        $(""#sr-issue"").val(row['issue']);
                        $(""#sr-machine"").val(row['machine']);
                        $(""#sr-issueremark"").val(row['issueremark']);
                        $(""#StartRepaireModal"").data(""id"", row['id']);

                        let tmp = new Date(row['occurtime']);
                        let Downtime = new Date() - tmp;

                        $(""#sr-downtime"").val((parseInt(Downtime / 1000)).Timeformat(""hh:mm:ss""));
                        //$(""#sr-employee"").val(getCookie(""dt-displayname""));
                        $(""#StartRepaireModal"").modal('show');
                    },
                    ""click #close"": function (e, value, row, index) {
                        if (confirm(""确定结束维修: "" + row['line'] + ' ' + row['station'] + ' : ' + row['issue'])) {
                            $.ajax");
            WriteLiteral(@"({
                                url: '/EC/CloseRepaire',
                                method: 'POST',
                                data: {
                                    id: row['id'],
                                },
                                success: function (data) {
                                    showSuccess('维修结束，辛苦了!');
                                    //结束直接填写 RC & CA
                                    //if (confirm(""开始填写 RC & CA ?"")) {
                                    //    ShowCARA(row);
                                    //}
                                },
                                fail: function (err, status, xhr) {
                                    showWarning(err.responseText);
                                },
                                error: function (err) {
                                    showWarning(err.responseText);
                                },
                                complete: function (res) {
      ");
            WriteLiteral(@"                              $(""#dtList"").bootstrapTable(""refreshOptions"", { url: '/EC/GetDowntimeList' });
                                }
                            })
                        }
                    },
                    ""click #edit"": function (e, value, row, index) {
                        ShowCARA(row);
                    },
                    ""click #view"": function (e, value, row, index) {
                        ViewDowntimeInfo(row);
                    }
                }
            }, {
                field: 'analysis',
                title: 'Cookbook',
                align: 'center',
                valign: 'middle',
                formatter: function (value, row, index) {
                    //显示分析页面
                    return ['<button type=""button"" class=""btn gray"" id=""showanalysis"">Cookbook</button>']
                },
                events: {
                    ""click #showanalysis"": function (e, value, row, index) {
                      ");
            WriteLiteral(@"  GetAnalysis(row);
                        $('#myTab a[href=""#analysisTab""]').tab('show');
                    }
                }
            }]
        })
        $('#myTab a[href=""#downtimeTab""]').tab('show')
    }

    //开始维修
    $('#startRepaire').on('click', function () {
        if ($(""#sr-employee"").val()) {
            $.ajax({
                url: '/EC/StartRepaire',
                method: 'POST',
                data: {
                    id: $(""#StartRepaireModal"").data('id'),
                    name: $(""#sr-employee"").val().toUpperCase(),
                },
                success: function (data) {
                    $(""#StartRepaireModal"").modal('hide');
                    showInfo(""开始维修，祝你工作愉快!"");
                },
                fail: function (err, status, xhr) {
                    showWarning(err.responseText);
                },
                error: function (err) {
                    showWarning(err.responseText);
                },
               ");
            WriteLiteral(@" complete: function (res) {
                    $(""#dtList"").bootstrapTable(""refreshOptions"", { url: '/EC/GetDowntimeList' });
                }
            })
        }
        else {
            showWarning(""请输入维修人员工号 !"");
        }
    });

    //填写CA
    function ShowCARA(row) {
        //获取EQID 配置Select2
        $.ajax({
            url: '/PMMS/getEQID',
            method: 'GET',
            dataType: 'json',
            success: function (data) {
                let option = '<option value=""""></option>';
                if (data.indexOf(row['machine']) < 0) {
                    option += '<option value=""' + row['machine'] + '"">' + row['machine'] + '</option>';
                }
                for (var i = 0; i < data.length; i++) {
                    option += '<option value=""' + data[i] + '"">' + data[i] + '</option>';
                }
                $(""#ca-machine"").html(option);
            },
            fail: function (err) {
                showWarning(err.statusTe");
            WriteLiteral(@"xt);
            },
            error: function (err) {
                console.log(err);
                showWarning(err.statusText);
            }
        })
        $(""#ca-machine"").select2({
            tags: false,
            maximumInputLength: 40,
            minimumInputLength: 2,
            minimumResultsForSearch: 10,
            placeholder: ""请输入设备ID""
        });
        $("".sparepart-item-view"").addClass(""elehide"");  //view ;里的元素隐藏
        //获取Sparepart 信息
        GetSPCategory($(""#ca-category""));
        GetSPSubCategory($(""#ca-subcategory""));
        GetAllPN($(""#ca-pn""));
        sparepartList = [];
        $(""#sparepart_table"").bootstrapTable('destroy');


        $(""#CA-title"").html(""填写 RC 和 CA"");
        $(""#ca-department"").val(row['department']);
        $(""#ca-project"").val(row['project']);
        $(""#ca-line"").val(row['line']);
        //$(""#ca-machine"").val(row['machine']);
        $(""#ca-station"").val(row['station']);
        $(""#ca-issue"").val(row['issue");
            WriteLiteral(@"']);
        $(""#ca-issueremark"").val(row['issueremark']);
        $(""#ca-employee"").val(row['respperson']);
        $(""#ca-labor"").val(row['labor']);
        $(':radio[name=caldowntime][value=' + row['calcdowntime'] + ']').prop('checked', 'true');
        $(':radio[name=caldowntime]').removeAttr('disabled', 'disabled');
        showDowntimeControls(row['calcdowntime'].toString());
        $(':radio[name=sparepartchange][value=false]').prop('checked', 'true');
        $(':radio[name=sparepartchange]').removeAttr('disabled', 'disabled');
        showSparepartControls(""false"");
        $(""#ca-qty"").val(0);
        $(""#ca-starttime"").val(new Date(row['occurtime']).format('yyyy-MM-dd hh:mm:ss'));
        $(""#ca-finishtime"").val(new Date(row['finishtime']).format('yyyy-MM-dd hh:mm:ss'));
        $(""#ca-downtime"").val(parseInt(row['downtime']).Timeformat(""hh:mm:ss""));

        $(""#ca-responsetime"").val((parseInt((new Date(row['finishtime']) - new Date(row['occurtime'])) / 1000)).Timeformat(""hh:mm:ss""");
            WriteLiteral(@")); //人员响应时间
       /* $(""#ca-tmdur"").val((parseInt((new Date(row['finishtime']) - new Date(row['repairtime'])) / 1000)).Timeformat(""hh:mm:ss""));  //维修时间*/

        $(""#ca-rootcause"").val(row['rootcause']);
        $(""#ca-rootcauseremark"").val(row['rootcauseremark']);
        $(""#ca-action"").val(row['action']);
        $(""#ca-actionremark"").val(row['actionremark']);
        $("".raca"").removeAttr('readonly');
        $(""#addCA"").removeClass(""elehide"");
        $(""#CAModal"").data(""id"", row['id']);
        $(""#CAModal"").modal('show');
    }
    //downtime相关控件是否显示
    $(':radio[name=caldowntime]').on('change', function (e) {
        showDowntimeControls(e.target.defaultValue);
    })
    function showDowntimeControls(flag) {
        if (flag == ""false"") {
            console.log(""NO"");
            $("".downtime-item"").addClass(""elehide"");
        } else {
            console.log(""YES"");
            $("".downtime-item"").removeClass(""elehide"");
        }
    }
    //sparepart相关控件是否显示
    $('");
            WriteLiteral(@":radio[name=sparepartchange]').on('change', function (e) {
        showSparepartControls(e.target.defaultValue);
    })
    function showSparepartControls(flag) {
        if (flag == ""false"") {
            console.log(""NO"");
            $("".sparepart-item"").addClass(""elehide"");
        } else {
            console.log(""YES"");
            $("".sparepart-item"").removeClass(""elehide"");
        }
    }
    //将备件跟换记录加到表格里，方便检查。
    var sparepartList = [];
    $(""#btn_addsparepart"").on('click', function () {
        if ($(""#ca-qty"").val() <= 0 || $(""#ca-qty"").val() == """") {
            showWarning(""使用的数量不能为0"");
        } else if ($(""#ca-pn"").val() == """") {
            showWarning(""PN不能为空"");
        }
        else {
            sparepartList.push({
                ""pn"": $(""#ca-pn"").val(),
                ""desc"": $(""#ca-pn option:selected"").text().split('/')[3],
                ""qty"": $(""#ca-qty"").val()
            })
            $(""#sparepart_table"").bootstrapTable('destroy').bootstrapTable(");
            WriteLiteral(@"{
                data: sparepartList,
                dataType: 'json',
                width:'100%',
                columns: [{
                    field: 'pn',
                    title: 'PN',
                }, {
                    field: 'desc',
                    title: 'Description',
                }, {
                    field: 'qty',
                    title: 'QTY',
                    }, {
                        field: 'operation',
                        title: '操作',
                        formatter: function (value, row, index) {
                            return ['<button type=""button"" class=""btn bad text-light"" id=""delete""><i class=""fa fa-trash""></i></button>']
                        },
                        events: {
                            ""click #delete"": function (e, value, row, index) {
                                if (confirm(""确定删除这个 Sparepart 更换记录"")) {
                                    sparepartList.splice(index, 1);
                            ");
            WriteLiteral(@"        $(""#sparepart_table"").bootstrapTable(""refreshOptions"", { data: sparepartList });
                                }
                            }
                        }
                    }]
            });
        }
    })
    $(""#ca-employee"").on('change', function () {
        if (!/^[Ww]/.test($(this).val())) {
            showWarning(""请输入正确的工号，以‘W’开头"");
            $(""#ca-employee"").focus();
        }
    })
    $(""#cr-creator"").on('change', function () {
        if (!/^[Ww]/.test($(this).val())) {
            showWarning(""请输入正确的工号，以‘W’开头"");
            $(""#cr-creator"").focus();
        }
    })
    $(""#addCA"").on('click', function () {
        if (checkFormNoNull(""#CAModal"")) {
            //判断 EmployeeID 不能是Auto
            if ($(""#ca-employee"").val().toUpperCase() == ""AUTO"") {
                showWarning(""请修改Employee ID (不可填Auto)"");
                $(""#ca-employee"").focus();
                return;
            } else if (!/^[Ww]/.test($(""#ca-employee"").val())){
 ");
            WriteLiteral(@"               showWarning(""请输入正确的工号，以‘W’开头"");
                $(""#ca-employee"").focus();
                return;
            }
            //判断 sparepart 是否需要填写 且已经填写
            if ($(""input[name='sparepartchange']:checked"").val() == 'true' ) {
                if (sparepartList.length <= 0) {
                    showWarning(""请填写备件更换记录再提交"");
                    return;
                } else {
                    //提交备件更换记录
                    sparepartList.map(i => {
                        var tmp = {
                            cfrom: ""Downtime"",
                            linkid: Number($(""#CAModal"").data('id')),
                            eqid: $(""#ca-machine"").val(),
                            pn: i.pn,
                            dri: $(""#ca-employee"").val(),
                            qty: Number(i.qty),
                            remark: $(""#ca-rootcause"").val(),
                        };
                        $.ajax({
                            url: 'http://cnwuxg0te0");
            WriteLiteral(@"1:9000/api/EqSparepartChange/Add_EqSparepartChangeHistory',
                            method: 'POST',
                            contentType: ""application/json"",
                            beforeSend: function (xhr) {
                                xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
                            },
                            data: JSON.stringify(tmp),
                            success: function (data) {
                                console.log(""上传 Sparepart 更换记录成功"")
                            },
                            error: function (err) {
                                showError(err.responseText);
                            }
                        })
                    });
                }
            }
            var tmp = {
                id: $(""#CAModal"").data('id'),
                calcdowntime: $(':radio[name=caldowntime]:checked').val(),
                labor: $(""#ca-labor"").val(),
                rootcause: $(""#ca-ro");
            WriteLiteral(@"otcause"").val(),
                rootcauseremark: $(""#ca-rootcauseremark"").val(),
                action: $(""#ca-action"").val(),
                actionremark: $(""#ca-actionremark"").val(),
                station: $(""#ca-station"").val(),
                respperson: $(""#ca-employee"").val().toUpperCase(),
                machine: $(""#ca-machine"").val(),
                issue: $(""#ca-issue"").val(),
                issueremark: $(""#ca-issueremark"").val(),
            };
            postData('/EC/RCCA', tmp)
                .then(res => {
                    if ($(':radio[name=caldowntime]:checked').val() == 'true') {
                        return getData('/Basic/GetCurrentWeek', { date: (new Date()).format('yyyy-MM-dd') })
                    }
                })
                .then(res => {
                    let tmpweek = res;
                    let currentWeek = new Date().getFullYear().toString() + ((Array(2).join(0) + tmpweek).slice(-2)).toString();//获取本周的数据
                    var iss");
            WriteLiteral(@"ueSummary = {
                        department: $(""#ca-department"").val(),
                        project: $(""#ca-project"").val(),
                        line: $(""#ca-line"").val(),
                        station: $(""#ca-station"").val(),
                        issue: $(""#ca-issue"").val(),
                        rootcause: $(""#ca-rootcause"").val(),
                        qty: 1,
                        action: """",
                        week: currentWeek,
                    }
                    return postData('/IssueSummary/CloseDowntime_ModifyIssueSummary', issueSummary)
                })
                .then(res => {
                    $(""#CAModal"").modal('hide');
                    showSuccess(""完成!"");
                    $(""#dtList"").bootstrapTable(""refreshOptions"", { url: '/EC/GetDowntimeList' });
                })
                .catch(err => {
                    showWarning(err);
                    $(""#dtList"").bootstrapTable(""refreshOptions"", { url: '/EC/GetDowntim");
            WriteLiteral(@"eList' });
                })
        }
    })

    //选择EQID后，显示该EQID的PM信息
    $(""#ca-machine"").on('change', function() {
        // 在选择完成后触发的方法
        console.log('选项已更改');
        $(""#ca-machine"").val()
        getData(""/PMMS/GetEQPM_Info"", { eqid: $(""#ca-machine"").val() })
            .then(res => {
                if (res.length>0) {
                    showInfo_long(res[0][""eqid""] + ""<br>上次点检时间: "" + res[0][""lastConfirmDate""].replace(""T"", "" "") + ""<br>下次点检时间："" + res[0][""nextConfirmDate""].replace(""T"", "" "") );
                }
            })
      
    });

    //查看downtime信息
    function ViewDowntimeInfo(row) {
        $("".sparepart-item"").addClass(""elehide"");
        ViewSparepartList(row);
        let option = '<option value=""' + row['machine'] + '"">' + row['machine'] + '</option>';
        $(""#ca-machine"").html(option);
        $(""#ca-machine"").select2({
            readonly: true,
            disable: true,
        });

        $(""#CA-title"").html(""查看 Downtime 信息"");
    ");
            WriteLiteral(@"    $(""#ca-department"").val(row['department']);
        $(""#ca-project"").val(row['project']);
        $(""#ca-line"").val(row['line']);
        $(""#ca-machine"").val(row['machine']);
        $(""#ca-station"").val(row['station']);
        $(""#ca-issue"").val(row['issue']);
        $(""#ca-issueremark"").val(row['issueremark']);
        $(""#ca-employee"").val(row['respperson']);
        $(""#ca-labor"").val(row['labor']);
        $(':radio[name=caldowntime][value=' + row['calcdowntime'] + ']').prop('checked', 'true');
        $(':radio[name=caldowntime]').attr('disabled', 'disabled');
        showDowntimeControls(row['calcdowntime'].toString());
        $(""#ca-starttime"").val(new Date(row['occurtime']).format('yyyy-MM-dd hh:mm:ss'));
        $(""#ca-finishtime"").val(new Date(row['finishtime']).format('yyyy-MM-dd hh:mm:ss'));
        $(""#ca-downtime"").val(parseInt(row['downtime']).Timeformat(""hh:mm:ss""));

        $(""#ca-responsetime"").val((parseInt((new Date(row['repairtime']) - new Date(row['occurtime']))");
            WriteLiteral(@" / 1000)).Timeformat(""hh:mm:ss"")); //人员响应时间
        $(""#ca-tmdur"").val((parseInt((new Date(row['finishtime']) - new Date(row['repairtime'])) / 1000)).Timeformat(""hh:mm:ss""));  //维修时间

        $(""#ca-rootcause"").val(row['rootcause']);
        $(""#ca-rootcauseremark"").val(row['rootcauseremark']);
        $(""#ca-action"").val(row['action']);
        $(""#ca-actionremark"").val(row['actionremark']);
        $("".raca"").attr('readonly', true);
        $("".raca"").attr('disable', ""disable"");

        $(""#addCA"").addClass(""elehide"");
        $(""#CAModal"").data(""id"", row['id']);
        $(""#CAModal"").modal('show');
    }
    //展示Sparepart记录；不管有没有都要显示
    function ViewSparepartList(row) {
        getData( 'http://cnwuxg0te01:9000/api/EqSparepartChange/Query_EqSparepartChangeHistory',
             {
                cfrom: ""Downtime"",
                linkid: row['id'],
            })
            .then(res => {
                $(""#sparepart_view_table"").bootstrapTable('destroy').bootstrapTable({
       ");
            WriteLiteral(@"             data:res,
                    dataType: 'json',
                    width: '100%',
                    columns: [{
                        field: 'pn',
                        title: 'PN',
                    }, {
                        field: 'desc',
                        title: 'Description',
                    }, {
                        field: 'qty',
                        title: 'QTY',
                    }]
                });
                if (res.length > 0) {
                    $(':radio[name=sparepartchange][value=true]').prop('checked', 'true');
                    $("".sparepart-item-view"").removeClass(""elehide"");
                } else {
                    $(':radio[name=sparepartchange][value=false]').prop('checked', 'true');
                    $("".sparepart-item-view"").addClass(""elehide"");
                }
                $(':radio[name=sparepartchange]').attr('disabled', 'disabled');
            })
            .catch(err => {
                show");
            WriteLiteral(@"Warning(err);
            })
    }

    //创建DowntimeIncidence
    $(""#new"").on('click', function () {
        $("".create-input"").val("""");
        $(""#createDT"").datetimepicker({
            fontAwesome: 'font-awesome',
            format: 'yyyy-mm-dd hh:ii',//hh:00:00', //时间显示的格式
            todayBtn: true, //一键选中今天的日期
            minDate: '2022/01/01',
            maxDate: 0,//今天
            pickerPosition: ""bottom-left"", //打开选择卡的位置
            weekStart: 1, //周开始的星期：0-6 星期日-星期六
            autoclose: true,//选好时间后自动关闭
            startView: 1,
            maxView: 4,
            minView: 0,//显示的最小选项卡：0-4 hour,day,month,year,decade
            minuteStep: 5,
            language: 'zh-CN',
            startDate: getDay(-1, '-'),
            endDate: new Date(),
        });
        $(""#CreateIncidenceModal"").modal(""show"");
    })
    function CreateIncidence() {
        var items = $("".need"");
        for (var i = 0; i < items.length; i++) {
            if (!$(items[i]).val()) {
  ");
            WriteLiteral(@"              showWarning(""请填写"" + $(items[i]).data(""remark""));
                return;
            }
        }
        if (!/^[Ww]/.test($(""##cr-creator"").val())) {
            showWarning(""请输入正确的工号，以‘W’开头"");
            $(""#cr-creator"").focus();
            return;
        }
        $.ajax({
            url: '/EC/CreateDowmtimeIncident',
            method: 'POST',
            data: {
                comefrom: ""Downtime System"",
                alarmtype: ""Downtime Incident Created"",
                project: $(""#cr-project"").val(),
                line: $(""#cr-line"").val(),
                station: $(""#cr-station"").val(),
                occurtime: $(""#cr-occtime"").val(),
                calcdowntime: ""true"",
                department: $(""#cr-department"").val(),
                issue: $(""#cr-issue"").val(),
                issueremark: $(""#cr-issueremark"").val(),
                creator: $(""#cr-creator"").val(),
                machine: $(""#cr-machine"").val(),
                action: ");
            WriteLiteral(@""""",
            },
            success: function (data) {
                $(""#CreateIncidenceModal"").modal('hide');
                showInfo(""Downtime信息已创建，请尽快维修!"");
            },
            fail: function (err, status, xhr) {
                showWarning(err.responseText);
            },
            error: function (err) {
                showWarning(err.responseText);
            },
            complete: function (res) {
                $('#department-select').val($(""#cr-department"").val());
                $('#project-select').val($(""#cr-project"").val())
                $('#line-select').val($(""#cr-line"").val())
                $('#station-select').val($(""#cr-station"").val())
                $(""#dtList"").bootstrapTable(""refreshOptions"", { url: '/EC/GetDowntimeList' });
            }
        })
    }

    //显示分析结果
    function GetAnalysis(row) {
        $(""#asList"").bootstrapTable('destroy').bootstrapTable({
            cache: false,
            type: 'GET',
            url: '/Is");
            WriteLiteral(@"sueSummary/GetIssueSummary',
            queryParams: {
                Department: row['department'],
                Project: row['project'],
                Line: row['line'],
                Station: row['station'],
                issue: row['issue'],
            },
            dataType: 'json',
            columns: [{
                field: 'issue',
                title: 'Defect Code',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'totalqty',
                title: 'Accumulative QTY',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'totalPercent',
                title: 'Percentage%',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'rootcause',
                title: 'Root Cause',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'qty',
   ");
            WriteLiteral(@"             title: 'Sub QTY',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'subPercent',
                title: 'Sub Percentage%',
                align: 'center',
                valign: 'middle',
            }, {
                field: 'action',
                title: 'Analysis Steps',
                align: 'center',
                valign: 'middle',
            },],
            onLoadSuccess: function (data) {
                var data = $('#asList').bootstrapTable('getData', true);
                //合并单元格
                mergeCells(data, ""issue"", 1, $('#asList'));

                //增加ecahrts
                var ecahrtsData = []
                var legen = []
                var piedata = [];
                for (var prop in data) {
                    legen.push(data[prop]['rootcause']);
                    ecahrtsData.push(data[prop]['qty']);
                    piedata.push({
                        value: data[pr");
            WriteLiteral(@"op]['qty'],
                        name: data[prop]['rootcause'],
                    });
                }
                FrequencyChart(ecahrtsData, legen);
                PercentChart(piedata);
            }
        });
    }
    //修改分析结果的action, 未启用
    function EditAnalysis() {
        $.ajax({
            url: '/IssueSummary/EditIssueSummary_Action',
            method: 'POST',
            data: {
                id: $(""#AnalysisEditModal"").data('id'),
                action: $(""#analysis-action"").val(),
                //correctiveaction: row['correctiveaction'],
                editor: ""Auto"",
            },
            success: function (data) {
                console.log(data);
            },
            error: function (err) {
                alert(err.responseText);
            },
            complete: function (res) {
                $(""#asList"").bootstrapTable(""refreshOptions"", { url: ""/IssueSummary/GetIssueSummary"" });
                $(""#AnalysisEditModal"").moda");
            WriteLiteral(@"l('hide');
            }
        })
    }
    // analysis 界面现实的echarts
    var frequencychart;
    var percentchart;
    function FrequencyChart(data, legen) {
        console.log(data, legen);
        $(""#frequencychart"").css('width', $(""#myTabContent"").width() * 0.5 - 10);
        var chartDom = document.getElementById('frequencychart');
        if (frequencychart != null && frequencychart != """" && frequencychart != undefined) {
            frequencychart.dispose();//解决echarts dom已经加载的报错
        }
        frequencychart = echarts.init(chartDom);
        var option = {
            title: {
                text: 'RootCause Frequence',
                left: 'center',
                textStyle: {
                    fontSize: 18,
                }
            },
            xAxis: {
                data: legen,
                type: 'category',
                axisTick: {
                    show: false
                },
                axisLine: {
                    show: false");
            WriteLiteral(@"
                },
                z: 10
            },
            yAxis: {
                axisLine: {
                    show: false
                },
                axisTick: {
                    show: false
                },
                axisLabel: {
                    color: '#999'
                }
            },
            dataZoom: [
                {
                    type: 'inside'
                }
            ],
            series: [
                {
                    type: 'bar',
                    showBackground: true,
                    label: {
                        show: true,
                    },
                    //itemStyle: {
                    //    color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                    //        { offset: 0, color: '#83bff6' },
                    //        { offset: 0.5, color: '#188df0' },
                    //        { offset: 1, color: '#188df0' }
                    //    ])
           ");
            WriteLiteral(@"         //},
                    //emphasis: {
                    //    itemStyle: {
                    //        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                    //            { offset: 0, color: '#2378f7' },
                    //            { offset: 0.7, color: '#2378f7' },
                    //            { offset: 1, color: '#83bff6' }
                    //        ])
                    //    }
                    //},
                    data: data,
                }
            ]
        };
        frequencychart.setOption(option);
        console.log(option);
    }
    function PercentChart(data) {
        $(""#percentchart"").css('width', $(""#myTabContent"").width() * 0.5 - 10);
        var chartDom = document.getElementById('percentchart');
        if (percentchart != null && percentchart != """" && percentchart != undefined) {
            percentchart.dispose();//解决echarts dom已经加载的报错
        }
        percentchart = echarts.init(chartDom);
       ");
            WriteLiteral(@" var option = {
            title: {
                text: 'RootCause Percentage',
                left: 'center',
                textStyle: {
                    fontSize: 18,
                }
            },
            tooltip: {
                trigger: 'item'
            },
            legend: {
                type: 'scroll',
                orient: 'vertical',
                right: 10,
                top: 20,
                bottom: 20,
            },
            series: [
                {
                    name: 'RootCause',
                    type: 'pie',
                    radius: ['40%', '70%'],
                    avoidLabelOverlap: false,
                    //itemStyle: {
                    //    borderRadius: 10,
                    //    borderColor: '#fff',
                    //    borderWidth: 2
                    //},
                    //label: {
                    //    show: false,
                    //    position: 'center'
                 ");
            WriteLiteral(@"   //},
                    emphasis: {
                        label: {
                            show: true,
                            fontSize: '20',
                            fontWeight: 'bold'
                        }
                    },
                    labelLine: {
                        show: false
                    },
                    data: data
                }
            ]
        };
        percentchart.setOption(option);
    }
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
